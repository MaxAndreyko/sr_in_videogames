# general settings
name: ESRGAN_train
model_type: ESRGANModel
num_gpu: 0  # set num_gpu: 0 for cpu mode
manual_seed: 0

preparation:
    subimages:
      n_thread: 6
      compression_level: 9
      input_folder: ./datasets/ExampleDataset/hr
      save_folder: ./datasets/ExampleDataset/hr_subimages
      crop_size: 32
      step: 32
      thresh_size: 32
    split:
      dataroot: ./datasets/ExampleDataset
      hq_folder: hr_subimages
      lq_folder: lr_subimages
      train_txt_name: train
      val_txt_name: val
      ratio: 0.3
      random_state: 42

# dataset and data loader settings
datasets:
  train:
    phase: train
    name: ESRGAN_dataset
    type: SRDataset
    dataroot: ../datasets/ExampleDataset
    hq_folder: hr_subimages
    lq_folder: lr_subimages
    txt_name: train
    io_backend:
      type: disk

    hq_size: 32
    scale: 4
    use_flip: true
    use_rot: true

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 3
    batch_size_per_gpu: 16
    dataset_enlarge_ratio: 10
    prefetch_mode: ~

  val:
    name: ESRGAN_dataset
    type: SRDataset
    dataroot: ../datasets/ExampleDataset
    hq_folder: hr_subimages
    lq_folder: lr_subimages
    txt_name: val
    io_backend:
      type: disk

    hq_size: 32
    scale: 4
    use_flip: false
    use_rot: false

# network structures
network_g:
  type: ESRGAN_G
  nchannels: 3
  nf: 64
  scale: 4

network_d:
  type: ESRGAN_D
  nchannels: 3
  use_sigmoid: true
  hq_size: 32



# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  optim_g:
    type: Adam
    lr: !!float 2e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_d:
    type: Adam
    lr: !!float 2e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [50000]
    gamma: 0.5

  total_iter: 100
  warmup_iter: -1  # no warm up

  # losses
  perceptual_opt:
    type: PerceptualLoss
    layer_weights: {"conv5_4": 1.}

  pixel_opt:
    type: L1Loss
    loss_weight: 1.0

  gan_opt:
    type: GANLoss
    gan_type: vanilla
    loss_weight: 1.0

# validation settings
val:
  val_freq: !!float 5e3
  save_img: false

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: false
    # niqe:
    #   type: calculate_niqe
    #   crop_border: 4

# logging settings
logger:
  print_freq: 1000
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
